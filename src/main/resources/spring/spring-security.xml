<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	
	<!-- passwordEncoder -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<context:component-scan base-package="com.portfolio.videocourse.security" />
	<context:component-scan base-package="com.portfolio.videocourse.dao.member" />
	<context:component-scan base-package="com.portfolio.videocourse.service.member"/>
	
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider>
			<sec:password-encoder ref="passwordEncoder" />
			<sec:jdbc-user-service data-source-ref="dataSource"
							users-by-username-query="select email as email,password as password,enabled,mId from video_course_member where email=?"
							authorities-by-username-query="select email as email,auth from video_course_member where email=?"
			/>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
	<sec:http use-expressions="true">
		<sec:access-denied-handler ref="AccessDenied"/>
		<sec:intercept-url pattern="/board/communityMain/**" access="hasAnyAuthority('Role_Member','Role_Admin')"/>
		<sec:intercept-url pattern="/member/login" access="permitAll"/>
		<sec:intercept-url pattern="/board/communityWrite" access="hasAnyAuthority('Role_Member','Role_Admin')"/>
		<sec:intercept-url pattern="/joinMember" access="!isAuthenticated()"/>
		<sec:intercept-url pattern="/lecturer/**" access="hasAnyAuthority('Role_lecturer','Role_Admin')"/>
		<sec:intercept-url pattern="/login" access="!isAuthenticated()"/>
		<sec:csrf request-matcher-ref="csrfMatcher"/>
		<sec:form-login
			login-page="/login"
			username-parameter="email"
			password-parameter="password"
			authentication-success-handler-ref="authSuccess"
			authentication-failure-handler-ref="authFailure"			
		/>
		<sec:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID" logout-success-url="/member/logout"/>
	</sec:http>
	
	<bean id="csrfMatcher" class="org.springframework.security.web.util.matcher.OrRequestMatcher">
		<constructor-arg>
			<util:list value-type="org.springframework.security.web.util.matcher.RequestMatcher">
				<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
					<constructor-arg name="pattern" value="/lecturer/changeInform/" />
					<constructor-arg name="httpMethod" value="POST"/>
				</bean>
				<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
					<constructor-arg name="pattern" value="/lecturer/changeInform/" />
					<constructor-arg name="httpMethod" value="GET"/>
				</bean>
			</util:list>
		</constructor-arg>
	</bean>
	

	
</beans>
